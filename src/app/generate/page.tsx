'use client';

import { useState, useEffect, Suspense } from 'react';
import { useRouter, useSearchParams } from 'next/navigation';
import { bookCategories } from '@/lib/bookCategories';
import { generatePDF, generateEnhancedContent, BookContent } from '@/lib/bookGeneration';

function GenerateBookContent() {
  const router = useRouter();
  const searchParams = useSearchParams();
  const categoryId = searchParams.get('category');
  const formDataString = searchParams.get('data');
  
  const [category, setCategory] = useState<any>(null);
  const [formData, setFormData] = useState<any>(null);
  const [generationStep, setGenerationStep] = useState(0);
  const [generatedContent, setGeneratedContent] = useState<string>('');
  const [isComplete, setIsComplete] = useState(false);

  const generationSteps = [
    "Analyzing your prompts...",
    "Creating story outline...",
    "Generating chapter content...",
    "Adding finishing touches...",
    "Your book is ready!"
  ];

  useEffect(() => {
    const simulateGeneration = async () => {
      for (let i = 0; i < generationSteps.length; i++) {
        setGenerationStep(i);
        await new Promise(resolve => setTimeout(resolve, 1500));
      }
      
      // Generate sample content based on the form data
      generateSampleContent();
      setIsComplete(true);
    };

    if (categoryId && formDataString) {
      const foundCategory = bookCategories.find(cat => cat.id === categoryId);
      const parsedData = JSON.parse(decodeURIComponent(formDataString));
      setCategory(foundCategory);
      setFormData(parsedData);
      
      // Start the generation simulation
      simulateGeneration();
    } else {
      router.push('/create');
    }
  }, [categoryId, formDataString, router]);

  const generateSampleContent = () => {
    if (!formData || !category) return;

    // Use enhanced content generation
    const content = generateEnhancedContent(category.id, formData);
    setGeneratedContent(content);
  };

  const handleDownloadPDF = () => {
    if (!generatedContent || !formData || !category) return;
    
    const bookContent: BookContent = {
      title: formData.title || 'Untitled Book',
      author: 'Generated by E-book Generator',
      category: category.title,
      content: generatedContent,
      formData: formData
    };
    
    generatePDF(bookContent);
  };

  const handleDownloadEPUB = () => {
    // In a real implementation, this would generate an EPUB
    alert('EPUB generation would be implemented with a library like epub-gen');
  };

  if (!category || !formData) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600 mx-auto"></div>
          <p className="mt-4 text-gray-600">Loading...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-purple-50">
      {/* Navigation */}
      <nav className="bg-white shadow-sm border-b">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between h-16">
            <div className="flex items-center">
              <button 
                onClick={() => router.push('/')}
                className="text-2xl font-bold text-gray-900 hover:text-blue-600"
              >
                ðŸ“š E-book Generator
              </button>
            </div>
            <div className="flex items-center space-x-4">
              <button 
                onClick={() => router.push('/create')}
                className="text-gray-600 hover:text-gray-900"
              >
                Create Another
              </button>
              <button className="text-gray-600 hover:text-gray-900">Login</button>
              <button className="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700">
                Sign Up
              </button>
            </div>
          </div>
        </div>
      </nav>

      {/* Main Content */}
      <main className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        {!isComplete ? (
          /* Generation Progress */
          <div className="text-center">
            <div className="text-6xl mb-8">ðŸ“š</div>
            <h1 className="text-4xl font-bold text-gray-900 mb-4">
              Generating Your Book
            </h1>
            <p className="text-lg text-gray-600 mb-8">
              Our AI is crafting your personalized {category.title.toLowerCase()} story...
            </p>
            
            <div className="max-w-md mx-auto">
              {/* Progress Bar */}
              <div className="bg-gray-200 rounded-full h-2 mb-6">
                <div 
                  className="bg-blue-600 h-2 rounded-full transition-all duration-1000"
                  style={{ width: `${((generationStep + 1) / generationSteps.length) * 100}%` }}
                ></div>
              </div>
              
              {/* Current Step */}
              <p className="text-gray-700 text-lg mb-8">
                {generationSteps[generationStep]}
              </p>
              
              {/* Steps List */}
              <div className="space-y-2">
                {generationSteps.map((step, index) => (
                  <div 
                    key={index}
                    className={`flex items-center text-sm ${
                      index <= generationStep ? 'text-green-600' : 'text-gray-400'
                    }`}
                  >
                    <div className={`w-2 h-2 rounded-full mr-3 ${
                      index < generationStep ? 'bg-green-600' : 
                      index === generationStep ? 'bg-blue-600' : 'bg-gray-300'
                    }`}></div>
                    {step}
                  </div>
                ))}
              </div>
            </div>
          </div>
        ) : (
          /* Generation Complete */
          <div>
            <div className="text-center mb-8">
              <div className="text-6xl mb-4">ðŸŽ‰</div>
              <h1 className="text-4xl font-bold text-gray-900 mb-2">
                Your Book is Ready!
              </h1>
              <p className="text-lg text-gray-600">
                &quot;{formData.title}&quot; has been generated successfully.
              </p>
            </div>

            <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
              {/* Book Preview */}
              <div className="lg:col-span-2">
                <div className="bg-white rounded-lg shadow-lg border p-6">
                  <h3 className="text-xl font-semibold text-gray-900 mb-4">
                    Book Preview
                  </h3>
                  <div className="prose prose-sm max-w-none max-h-96 overflow-y-auto bg-gray-50 p-4 rounded border">
                    <pre className="whitespace-pre-wrap text-sm font-mono">
                      {generatedContent}
                    </pre>
                  </div>
                </div>
              </div>

              {/* Download Options */}
              <div className="space-y-6">
                <div className="bg-white rounded-lg shadow-lg border p-6">
                  <h3 className="text-xl font-semibold text-gray-900 mb-4">
                    Download Your Book
                  </h3>
                  <div className="space-y-3">
                    <button
                      onClick={handleDownloadPDF}
                      className="w-full bg-red-600 text-white py-3 px-4 rounded-lg hover:bg-red-700 transition-colors flex items-center justify-center"
                    >
                      <span className="mr-2">ðŸ“„</span>
                      Download PDF
                    </button>
                    <button
                      onClick={handleDownloadEPUB}
                      className="w-full bg-green-600 text-white py-3 px-4 rounded-lg hover:bg-green-700 transition-colors flex items-center justify-center"
                    >
                      <span className="mr-2">ðŸ“–</span>
                      Download EPUB
                    </button>
                  </div>
                </div>

                <div className="bg-white rounded-lg shadow-lg border p-6">
                  <h3 className="text-xl font-semibold text-gray-900 mb-4">
                    Book Details
                  </h3>
                  <div className="space-y-2 text-sm">
                    <div><strong>Category:</strong> {category.title}</div>
                    <div><strong>Title:</strong> {formData.title}</div>
                    {formData.mainCharacter && (
                      <div><strong>Main Character:</strong> {formData.mainCharacter}</div>
                    )}
                    {formData.setting && (
                      <div><strong>Setting:</strong> {formData.setting}</div>
                    )}
                    <div><strong>Generated:</strong> {new Date().toLocaleDateString()}</div>
                  </div>
                </div>

                <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
                  <h4 className="font-semibold text-blue-900 mb-2">
                    ðŸ’¡ What&apos;s Next?
                  </h4>
                  <ul className="text-blue-800 text-sm space-y-1">
                    <li>â€¢ Edit the content to add your personal touch</li>
                    <li>â€¢ Share your book with family and friends</li>
                    <li>â€¢ Create more books with different themes</li>
                    <li>â€¢ Join our community to share your stories</li>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        )}
      </main>
    </div>
  );
}

export default function GenerateBook() {
  return (
    <Suspense fallback={
      <div className="min-h-screen flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-32 w-32 border-b-2 border-blue-600 mx-auto"></div>
          <p className="mt-4 text-gray-600">Loading...</p>
        </div>
      </div>
    }>
      <GenerateBookContent />
    </Suspense>
  );
}